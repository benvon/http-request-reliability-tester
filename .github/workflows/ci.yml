name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22, 1.23, 1.24]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Get Go version from go.mod
      id: go-version
      run: echo "version=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ steps.go-version.outputs.version }}

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest

    - name: Run golangci-lint
      run: golangci-lint run

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Get Go version from go.mod
      id: go-version
      run: echo "version=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ steps.go-version.outputs.version }}

    - name: Install security tools
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run gosec
      run: gosec ./...

    - name: Run govulncheck
      run: |
        if [ -f "$(go env GOROOT)/bin/govulncheck" ]; then
          $(go env GOROOT)/bin/govulncheck ./...
        elif command -v govulncheck >/dev/null 2>&1; then
          govulncheck ./...
        else
          echo "govulncheck not found, skipping vulnerability check"
        fi

  staticcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Get Go version from go.mod
      id: go-version
      run: echo "version=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ steps.go-version.outputs.version }}

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck ./...

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v5

    - name: Get Go version from go.mod
      id: go-version
      run: echo "version=$(grep '^go ' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ steps.go-version.outputs.version }}

    - name: Build
      run: go build -v -o http-tester .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: http-tester-${{ matrix.os }}
        path: http-tester* 